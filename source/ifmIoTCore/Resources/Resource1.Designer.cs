//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ifmIoTCore.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resource1 {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource1() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ifmIoTCore.Resources.Resource1", typeof(Resource1).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding element &apos;{0}&apos; to element &apos;{1}&apos; is not allowed, because it is an ancestor of element &apos;{1}&apos;.
        /// </summary>
        public static string AddAncestorElementNotAllowed {
            get {
                return ResourceManager.GetString("AddAncestorElementNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding an element to a link element is not allowed.
        /// </summary>
        public static string AddElementToLinkNotAllowed {
            get {
                return ResourceManager.GetString("AddElementToLinkNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The link between &apos;{0}&apos; and &apos;{1}&apos; would cause a circular dependency and is therefore not allowed .
        /// </summary>
        public static string AddLinkNotAllowed {
            get {
                return ResourceManager.GetString("AddLinkNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The adrlist parameter of the service data is empty. That is invalid..
        /// </summary>
        public static string AddressListIsEmpty {
            get {
                return ResourceManager.GetString("AddressListIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument with name &apos;{0}&apos; must not be null or empty.
        /// </summary>
        public static string ArgumentNullOrEmpty {
            get {
                return ResourceManager.GetString("ArgumentNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client factory for protocol &apos;{0}&apos; could not be found.
        /// </summary>
        public static string ClientFactoryNotFound {
            get {
                return ResourceManager.GetString("ClientFactoryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The element &apos;{0}&apos; already exists in element &apos;{1}&apos;.
        /// </summary>
        public static string ElementAlreadyExists {
            get {
                return ResourceManager.GetString("ElementAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The element &apos;{0}&apos; already has parent element &apos;{1}&apos;.
        /// </summary>
        public static string ElementAlreadyHasParent {
            get {
                return ResourceManager.GetString("ElementAlreadyHasParent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The element &apos;{0}&apos; is currently locked.
        /// </summary>
        public static string ElementLocked {
            get {
                return ResourceManager.GetString("ElementLocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The element manager is currently locked.
        /// </summary>
        public static string ElementManagerLocked {
            get {
                return ResourceManager.GetString("ElementManagerLocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The element &apos;{0}&apos; is not the child element of element &apos;{1}&apos;.
        /// </summary>
        public static string ElementNotChild {
            get {
                return ResourceManager.GetString("ElementNotChild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The element with address &apos;{0}&apos; could not be found.
        /// </summary>
        public static string ElementNotFound {
            get {
                return ResourceManager.GetString("ElementNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The element &apos;{0}&apos; is not linked from element &apos;{1}&apos;.
        /// </summary>
        public static string ElementNotLinked {
            get {
                return ResourceManager.GetString("ElementNotLinked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The element with address &apos;{0}&apos; is not a service.
        /// </summary>
        public static string ElementNotService {
            get {
                return ResourceManager.GetString("ElementNotService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument &apos;{0}&apos; is invalid.
        /// </summary>
        public static string InvalidArgument {
            get {
                return ResourceManager.GetString("InvalidArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument type &apos;{0}&apos; is invalid. Required type is &apos;{1}&apos;.
        /// </summary>
        public static string InvalidArgumentType {
            get {
                return ResourceManager.GetString("InvalidArgumentType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The device name in address &apos;{0}&apos; is invalid.
        /// </summary>
        public static string InvalidDeviceName {
            get {
                return ResourceManager.GetString("InvalidDeviceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The identifier &apos;{0}&apos; is invalid.
        /// </summary>
        public static string InvalidIdentifier {
            get {
                return ResourceManager.GetString("InvalidIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The adr field of a message may not be null or empty.
        /// </summary>
        public static string InvalidMessageAddress {
            get {
                return ResourceManager.GetString("InvalidMessageAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The message code &apos;{0}&apos; is invalid.
        /// </summary>
        public static string InvalidMessageCode {
            get {
                return ResourceManager.GetString("InvalidMessageCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name &apos;{0}&apos; is invalid.
        /// </summary>
        public static string InvalidName {
            get {
                return ResourceManager.GetString("InvalidName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The remote service at {&apos;0}&apos; returned an invalid response.
        /// </summary>
        public static string InvalidResponse {
            get {
                return ResourceManager.GetString("InvalidResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The uri &apos;{0}&apos; is invalid.
        /// </summary>
        public static string InvalidUri {
            get {
                return ResourceManager.GetString("InvalidUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The IoTCore has started. Version=&apos;{0}&apos;.
        /// </summary>
        public static string IoTCoreStarted {
            get {
                return ResourceManager.GetString("IoTCoreStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The IoTCore has stopped.
        /// </summary>
        public static string IoTCoreStopped {
            get {
                return ResourceManager.GetString("IoTCoreStopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The link between &apos;{0}&apos; and &apos;{1}&apos; already exists.
        /// </summary>
        public static string LinkAlreadyExists {
            get {
                return ResourceManager.GetString("LinkAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Links are not modifiable.
        /// </summary>
        public static string LinksNotModifiable {
            get {
                return ResourceManager.GetString("LinksNotModifiable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name &apos;{0}&apos; is already used.
        /// </summary>
        public static string NameAlreadyUsed {
            get {
                return ResourceManager.GetString("NameAlreadyUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name &apos;{0}&apos; could not be found.
        /// </summary>
        public static string NameNotFound {
            get {
                return ResourceManager.GetString("NameNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter &apos;{0}&apos; is not specified.
        /// </summary>
        public static string ParameterNotSpecified {
            get {
                return ResourceManager.GetString("ParameterNotSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The root element already exists.
        /// </summary>
        public static string RootElementAlreadyExists {
            get {
                return ResourceManager.GetString("RootElementAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sending event to &apos;{0}&apos; failed with error &apos;{1}&apos;.
        /// </summary>
        public static string SendEventFailed {
            get {
                return ResourceManager.GetString("SendEventFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sending request to &apos;{0}&apos; failed with error &apos;{1}&apos;.
        /// </summary>
        public static string SendRequestFailed {
            get {
                return ResourceManager.GetString("SendRequestFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data for service &apos;{0}&apos; is empty. Please check the &apos;data&apos; field in your request.
        /// </summary>
        public static string ServiceDataEmpty {
            get {
                return ResourceManager.GetString("ServiceDataEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service &apos;{0}&apos; failed; message: &apos;{1}&apos;.
        /// </summary>
        public static string ServiceExecutionFailed {
            get {
                return ResourceManager.GetString("ServiceExecutionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service &apos;{0}&apos; is not implemented.
        /// </summary>
        public static string ServiceNotImplemented {
            get {
                return ResourceManager.GetString("ServiceNotImplemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The subscription data was not supplied.
        /// </summary>
        public static string SubscriptionDataMissing {
            get {
                return ResourceManager.GetString("SubscriptionDataMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The subscription with identification &apos;{0}&apos; could not be found.
        /// </summary>
        public static string SubscriptionNotFound {
            get {
                return ResourceManager.GetString("SubscriptionNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The lifetime of the subscription was set to lifetime, but there is no persistence manager registered. To enable persistence please register a persistence manager..
        /// </summary>
        public static string SubscriptionSetToLifeTimeButNoPersistenceManagerRegistered {
            get {
                return ResourceManager.GetString("SubscriptionSetToLifeTimeButNoPersistenceManagerRegistered", resourceCulture);
            }
        }
    }
}
